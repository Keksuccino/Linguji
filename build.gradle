
plugins {
    id 'java'
}

group 'de.keksuccino.subtitletranslateai'
version '1.0.0'

repositories {
    mavenCentral()
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17)
java.withSourcesJar()

dependencies {

//    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
//    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'

    implementation group: 'org.jetbrains', name: 'annotations', version: '24.1.0'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.22.1'
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.10.1'
    implementation group: 'org.apache.httpcomponents.client5', name: 'httpclient5', version: '5.3'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.14.0'
    implementation group: 'com.google.guava', name: 'guava', version: '33.0.0-jre'

}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = 'UTF-8'
    it.options.getRelease().set(17)
}

jar {

//    manifest {
//        attributes(
//                'Main-Class' : "de.keksuccino.modmanager.ModManager"
//        )
//    }
//
//    zip64 = true
//
//    from {
//        exclude('META-INF/LICENSE.txt')
//        exclude('META-INF/NOTICE.txt')
//        exclude('META-INF/DEPENDENCIES')
//        exclude('META-INF/LICENSE')
//        exclude('META-INF/NOTICE')
//        exclude('META-INF/maven/commons-io/')
//        configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) }
//    }

}

test {
    useJUnitPlatform()
}